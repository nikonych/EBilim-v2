# - *- coding: utf- 8 - *-
from datetime import datetime, timedelta

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from loader import dp, bot
import data.config as config

#from tgbot.services.api_sqlite import get_paymentx, get_crystal, get_yoo, get_settingsx






async def accept_license(user_id):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton(text="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ",
                                   url="https://medium.com/@mamixkik/%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%BE%D0%B5-%D1%81%D0%BE%D0%B3%D0%BB%D0%B0%D1%88%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B4%D0%BB%D1%8F-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F-1cebb7b9a69e"),
        )
    keyboard.add(InlineKeyboardButton(text="–ü—Ä–æ—á–∏—Ç–∞–ª –∏ –°–æ–≥–ª–∞—Å–µ–Ω", callback_data=f'add_user:{user_id}'))
    return keyboard


# –í–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤
async def choose_withdraw():
    keyboard = InlineKeyboardMarkup()
    chooses = await config.get_choose_withdraw()
    len_chooses = len(chooses)

    if len_chooses == 1:
        keyboard.add(InlineKeyboardButton(chooses[0], callback_data=f"withdraw_to:{chooses[0]}"))
    elif len_chooses % 2 == 0:
        for i in range(0, len_chooses, 2):
            keyboard.add(InlineKeyboardButton(chooses[i], callback_data=f"withdraw_to:{chooses[i]}"),
                         InlineKeyboardButton(chooses[i+1], callback_data=f"withdraw_to:{chooses[i+1]}"))
    else:
        for i in range(0, len_chooses, 2):
            keyboard.add(InlineKeyboardButton(chooses[i], callback_data=f"withdraw_to:{chooses[i]}"),
                         InlineKeyboardButton(chooses[i+1], callback_data=f"withdraw_to:{chooses[i+1]}"))
        keyboard.add(InlineKeyboardButton(chooses[-1], callback_data=f"withdraw_to:{chooses[-1]}"))

    keyboard.add(InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="user_profile"))

    return keyboard



# Back to user profile
async def back_button_to_profile():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="user_profile"))
    return keyboard

# Back to main menu
async def back_button():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="main"))
    return keyboard

# –ö–ª–∞–≤–∞ –¢–æ–ø –∫–æ–º–∞–Ω–¥—ã
async def top_buttons(user_id):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton('üèÜ –¢–æ–ø –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è', callback_data=f"top_by_alllogs:{user_id}"),
                 InlineKeyboardButton('üèÜ –¢–æ–ø –∑–∞ –º–µ—Å—è—Ü', callback_data=f"top_by_monthlogs:{user_id}"))
    keyboard.add(InlineKeyboardButton('üèÜ –¢–æ–ø –∑–∞ –Ω–µ–¥–µ–ª—é', callback_data=f"top_by_weeklogs:{user_id}"),
                 InlineKeyboardButton('üèÜ –¢–æ–ø –∑–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data=f"top_by_daylogs:{user_id}"))
    keyboard.add(InlineKeyboardButton('üßä –¢–æ–ø –ø–æ —Ö–æ–ª–æ–¥–∫–∞–º', callback_data=f"top_by_allcolds:{user_id}"))
    return keyboard

# –ö–ª–∞–≤–∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
async def info_buttons(settings):
    button_list = []

    try:
        if settings['logchat'] != 0:
            if config.otstuklink == '':
                link = await bot.create_chat_invite_link(settings['logchat'], member_limit=2)
                link = link.invite_link
                await config.updatelink('otstuklink', link)
                config.otstuklink = link
            else: link = config.otstuklink

            button_list.append(InlineKeyboardButton('–ö–∞–Ω–∞–ª –æ—Ç—Å—Ç—É–∫–∞', url=link))
    except: pass

    try:
        if settings['profitchat'] != 0:
            if config.profitlink == '':
                link = await bot.create_chat_invite_link(settings['profitchat'], member_limit=2)
                link = link.invite_link
                await config.updatelink('profitlink', link)
                config.profitlink =link
            else: link = config.otstuklink

            button_list.append(InlineKeyboardButton('–ö–∞–Ω–∞–ª –ø—Ä–æ—Ñ–∏—Ç–æ–≤', url=link))
    except: pass

    try:
        if settings['workerchat'] != 0:
            if config.workerchatlink == '':
                link = await bot.create_chat_invite_link(settings['workerchat'], member_limit=2)
                link = link.invite_link
                await config.updatelink('workerchatlink', link)
                config.workerchatlink = link
            else: link = config.otstuklink

            button_list.append(InlineKeyboardButton('–ö–∞–Ω–∞–ª –æ—Ç—Å—Ç—É–∫–∞', url=link))
    except: pass

    try:
        if settings['newschat'] != 0:
            if config.newslink == '':
                link = await bot.create_chat_invite_link(settings['newschat'], member_limit=2)
                link = link.invite_link
                await config.updatelink('newslink', link)
                config.newslink = link
            else: link = config.otstuklink

            button_list.append(InlineKeyboardButton('–ù–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª', url=link))
    except: pass

    keyboard = InlineKeyboardMarkup()

    if len(button_list) == 4: keyboard.add(button_list[0], button_list[1]); keyboard.add(button_list[2], button_list[3])
    elif len(button_list) == 3: keyboard.add(button_list[0], button_list[1]); keyboard.add(button_list[2])
    elif len(button_list) == 2: keyboard.add(button_list[0], button_list[1])
    elif len(button_list) == 1: keyboard.add(button_list[0])
    else: keyboard = None

    return keyboard



# –ö–ª–∞–≤–∏—à–∏ –ø—Ä–æ—Ñ–∏–ª—è
async def profile_buttons(user_data):
    keyboard = InlineKeyboardMarkup()

    if user_data['is_visible']:
        keyboard.add(InlineKeyboardButton('üî¥ –°–∫—Ä—ã—Ç—å —é–∑–µ—Ä–Ω–µ–π–º', callback_data=f"hide_username:{user_data['user_id']}"),
                     InlineKeyboardButton('üîÑ –û–±–Ω–æ–≤–∏—Ç—å —é–∑–µ—Ä–Ω–µ–π–º', callback_data=f"refresh_username:{user_data['user_id']}"))
    else:
        keyboard.add(InlineKeyboardButton('üü¢ –ü–æ–∫–∞–∑–∞—Ç—å —é–∑–µ—Ä–Ω–µ–π–º', callback_data=f"show_username:{user_data['user_id']}"),
                     InlineKeyboardButton('üîÑ –û–±–Ω–æ–≤–∏—Ç—å —é–∑–µ—Ä–Ω–µ–π–º', callback_data=f"refresh_username:{user_data['user_id']}"))

    keyboard.add(InlineKeyboardButton('üí≥ –í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞', callback_data=f"withdraw:{user_data['user_id']}"),
                 InlineKeyboardButton('‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç—Ä–∞–±–æ—Ç–∫–∏', callback_data=f"otrabotka_settings:{user_data['user_id']}"))

    return keyboard


# –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
def refill_choice_finl():
    keyboard = InlineKeyboardMarkup()

    get_payments = get_paymentx()
    crystal = get_crystal()
    wm = get_yoo()
    active_kb = []

    if get_payments['way_form'] == "True":
        active_kb.append(InlineKeyboardButton("ü•ù QIWI", callback_data="refill_choice:Form"))
    # if get_payments['way_number'] == "True":
    #     active_kb.append(InlineKeyboardButton("üìû QIWI –Ω–æ–º–µ—Ä", callback_data="refill_choice:Number"))
    # if get_payments['way_nickname'] == "True":
    #     active_kb.append(InlineKeyboardButton("‚ìÇ QIWI –Ω–∏–∫–Ω–µ–π–º", callback_data="refill_choice:Nickname"))

    if crystal['status'] == True:
        active_kb.append(InlineKeyboardButton("üíé Crystal", callback_data="refill_choice:Crystal"))

    if wm['status'] == True:
        active_kb.append(InlineKeyboardButton("üåç Yoomoney", callback_data="refill_choice:YooMoney"))


    if len(active_kb) == 5:
        keyboard.add(active_kb[0], active_kb[1])
        keyboard.add(active_kb[2], active_kb[3])
        keyboard.add(active_kb[4])
    if len(active_kb) == 4:
        keyboard.add(active_kb[0], active_kb[1])
        keyboard.add(active_kb[2], active_kb[3])
    elif len(active_kb) == 3:
        keyboard.add(active_kb[0], active_kb[1])
        keyboard.add(active_kb[2])
    elif len(active_kb) == 2:
        keyboard.add(active_kb[0], active_kb[1])
    elif len(active_kb) == 1:
        keyboard.add(active_kb[0])
    else:
        keyboard = None

    if len(active_kb) >= 1:
        keyboard.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="user_profile"))

    return keyboard


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∏–≤–∏ –ø–ª–∞—Ç–µ–∂–∞
def refill_bill_finl(send_requests, get_receipt, get_way):
    keyboard = InlineKeyboardMarkup(
    ).add(
        InlineKeyboardButton("üåÄ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", url=send_requests)
    ).add(
        InlineKeyboardButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"Pay:{get_way}:{get_receipt}")
    )

    return keyboard


def refill_bill_finl_wm(send_requests):
    keyboard = InlineKeyboardMarkup(
    ).add(
        InlineKeyboardButton("üåÄ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", url=send_requests)
    )

    return keyboard



# –ö–Ω–æ–ø–∫–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å–∞–º–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
def products_open_finl(user_id ,position_id, remover, category_id, subcategory_id):
    if user_id not in get_admins():
        keyboard = InlineKeyboardMarkup(
        ).add(
            InlineKeyboardButton("üí≥ –ö—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä", callback_data=f"buy_item_select:{position_id}")
        ).add(
            InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data=f"buy_position_return:{remover}:{category_id}:{subcategory_id}")
        )
    else:
        keyboard = InlineKeyboardMarkup(
        ).add(
            InlineKeyboardButton("‚úÖ –ö—É–ø–∏—Ç—å", callback_data=f"buy_item_select:{position_id}"),
            InlineKeyboardButton("‚ùÑÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å", callback_data=f"show_item_select:{position_id}:{category_id}:{subcategory_id}")
        ).add(
            InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data=f"buy_position_return:{remover}:{category_id}:{subcategory_id}")
        )

    return keyboard


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞
def products_confirm_finl(position_id, get_count):
    keyboard = InlineKeyboardMarkup(
    ).add(
        InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"xbuy_item:yes:{position_id}:{get_count}"),
        InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"xbuy_item:not:{position_id}:{get_count}")
    )

    return keyboard


def products_item_check(item_id, position_id, category_id, subcategory_id):
    keyboard = InlineKeyboardMarkup(
    ).add(
        InlineKeyboardButton("‚úÖ –î–∞", callback_data=f"change_item_check:{item_id}:gg:{position_id}:{category_id}:{subcategory_id}"),
        InlineKeyboardButton("‚õîÔ∏è –ù–µ—Ç", callback_data=f"show_item_select:{position_id}:{category_id}:{subcategory_id}")
    )
    return keyboard

def products_item_check_file(item_id, position_id, category_id, subcategory_id):
    keyboard = InlineKeyboardMarkup(
    ).add(
        InlineKeyboardButton("‚úÖ –î–∞", callback_data=f"change_item_file_check:{item_id}:gg:{position_id}:{category_id}:{subcategory_id}"),
        InlineKeyboardButton("‚õîÔ∏è –ù–µ—Ç", callback_data=f"show_item_select:{position_id}:{category_id}:{subcategory_id}")
    )
    return keyboard

# –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É
def user_support_finl():
    settings = get_settingsx()

    keyboard = InlineKeyboardMarkup(
    ).add(
        InlineKeyboardButton("üíå –ù–∞–ø–∏—Å–∞—Ç—å", callback_data=f"links_to_admins"),
    )
    if settings['misc_chat_link'] != None:
        keyboard.add(
            InlineKeyboardButton("üç∑ –õ–∞–º–ø–æ–≤—ã–π –ß–∞—Ç", url=settings['misc_chat_link']))
    keyboard.add(
        InlineKeyboardButton("–ó–∞–∫—Ä—ã—Ç—å", callback_data="close_this")
    )
    return keyboard

def admin_support_finl(admin, support):
    keyboard = InlineKeyboardMarkup(
    ).add(
        InlineKeyboardButton("üßõüèª‚Äç‚ôÄÔ∏è Support", url=f"https://t.me/{support}"),
        InlineKeyboardButton("üé© Admin", url=f"https://t.me/{admin}"),
    ).add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="open_faq")
    )

    return keyboard

def user_edit_item(position_id, remover, category_id, subcategory_id):
    keyboard = InlineKeyboardMarkup(
    ).add(
        InlineKeyboardButton("üÜô –ò–∑–º–µ–Ω–∏—Ç—å", callback_data=f"change_item_select:{position_id}:{category_id}:{subcategory_id}"),
    ).add(
        InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data=f"buy_position_open:{position_id}:{remover}:{category_id}:{subcategory_id}")
    )

    return keyboard
